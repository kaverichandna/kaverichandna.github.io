I"<h3 id="led">LED</h3>

<p>The default on-board RGB LED <code class="language-plaintext highlighter-rouge">GPIO48</code> does not work with the blinky code. Hence, wire up a simple LED and resistor to <a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s3/hw-reference/esp32s3/user-guide-devkitc-1.html#pin-layout"><code class="language-plaintext highlighter-rouge">GPIO5</code> of the board</a>.</p>

<h3 id="upload-micropython-binary">Upload Micropython binary</h3>

<ol>
  <li>Plug in the board via the <code class="language-plaintext highlighter-rouge">USB</code> port to know the port number
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span><span class="nb">ls</span> /dev/cu.<span class="k">*</span>

 /dev/cu.Bluetooth-Incoming-Port  /dev/cu.usbmodem14101
</code></pre></div>    </div>
  </li>
  <li><a href="https://micropython.org/download/">Download</a> the <code class="language-plaintext highlighter-rouge">*.bin</code> file for the <a href="https://micropython.org/download/GENERIC_S3/">board</a> <code class="language-plaintext highlighter-rouge">GENERIC_S3-20220618-v1.19.1.bin</code></li>
  <li><a href="https://micropython.org/download/GENERIC_S3/">Erase</a> the entire flash
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span>esptool.py <span class="nt">--chip</span> esp32s3 <span class="nt">--port</span> /dev/cu.usbmodem14101 erase_flash

 esptool.py v4.3
 Serial port /dev/cu.usbmodem14101
 Connecting...
 Chip is ESP32-S3 <span class="o">(</span>revision v0.1<span class="o">)</span>
 Features: WiFi, BLE
 Crystal is 40MHz
 MAC: 7c:df:a1:e2:79:08
 Uploading stub...
 Running stub...
 Stub running...
 Erasing flash <span class="o">(</span>this may take a <span class="k">while</span><span class="o">)</span>...
 Chip erase completed successfully <span class="k">in </span>21.5s
 Hard resetting via RTS pin...
</code></pre></div>    </div>
  </li>
  <li>Flash the firmware starting at address 0
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span>esptool.py <span class="nt">--chip</span> esp32s3 <span class="nt">--port</span> /dev/cu.usbmodem14101 write_flash <span class="nt">-z</span> 0 GENERIC_S3-20220618-v1.19.1.bin
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="access-the-serial-monitor-with-the-python-code">Access the Serial monitor with the Python code</h2>

<ol>
  <li>Download <a href="https://github.com/scientifichackers/ampy">ampy</a> and ensure it is available
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ampy <span class="nt">--help</span>
</code></pre></div>    </div>
  </li>
  <li>Plug in the board through the <code class="language-plaintext highlighter-rouge">UART</code> port</li>
  <li>Check the port number of the board
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">ls</span> /dev/cu.<span class="k">*</span>

 /dev/cu.Bluetooth-Incoming-Port  /dev/cu.SLAB_USBtoUART  /dev/cu.usbserial-1410
</code></pre></div>    </div>
  </li>
  <li>Run the python script
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ampy <span class="nt">--port</span> /dev/cu.usbserial-1410 run blink.py
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="rollback-from-micropython-to-arduino">Rollback from Micropython to Arduino</h3>

<ol>
  <li>Follow the <a href="./rollback-esp32s3">rollback steps</a> to erase the flash.</li>
  <li><a href="./blinky-esp-idf-esp32s3">Flash in blinky with ESP-IDF</a>.</li>
  <li><a href="./blinky-arduino-esp32c3">Flash in blinky with Arduino</a>.</li>
</ol>
:ET